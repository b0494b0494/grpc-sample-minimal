// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v4.25.0
// source: proto/greeter.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request message containing the user's name.
type HelloRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HelloRequest) Reset() {
	*x = HelloRequest{}
	mi := &file_proto_greeter_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelloRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloRequest) ProtoMessage() {}

func (x *HelloRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloRequest.ProtoReflect.Descriptor instead.
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{0}
}

func (x *HelloRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// The response message containing the greetings
type HelloReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HelloReply) Reset() {
	*x = HelloReply{}
	mi := &file_proto_greeter_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelloReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloReply) ProtoMessage() {}

func (x *HelloReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloReply.ProtoReflect.Descriptor instead.
func (*HelloReply) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{1}
}

func (x *HelloReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// The request message for the counter stream.
type CounterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CounterRequest) Reset() {
	*x = CounterRequest{}
	mi := &file_proto_greeter_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CounterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CounterRequest) ProtoMessage() {}

func (x *CounterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CounterRequest.ProtoReflect.Descriptor instead.
func (*CounterRequest) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{2}
}

func (x *CounterRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// The response message for the counter stream.
type CounterReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CounterReply) Reset() {
	*x = CounterReply{}
	mi := &file_proto_greeter_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CounterReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CounterReply) ProtoMessage() {}

func (x *CounterReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CounterReply.ProtoReflect.Descriptor instead.
func (*CounterReply) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{3}
}

func (x *CounterReply) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// The message type for chat communication.
type ChatMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          string                 `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	mi := &file_proto_greeter_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{4}
}

func (x *ChatMessage) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ChatMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Message for file chunks during upload/download.
type FileChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       []byte                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Filesize      int64                  `protobuf:"varint,3,opt,name=filesize,proto3" json:"filesize,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileChunk) Reset() {
	*x = FileChunk{}
	mi := &file_proto_greeter_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChunk) ProtoMessage() {}

func (x *FileChunk) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChunk.ProtoReflect.Descriptor instead.
func (*FileChunk) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{5}
}

func (x *FileChunk) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *FileChunk) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileChunk) GetFilesize() int64 {
	if x != nil {
		return x.Filesize
	}
	return 0
}

// Message for file upload status.
type FileUploadStatus struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Filename        string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	BytesWritten    int64                  `protobuf:"varint,2,opt,name=bytes_written,json=bytesWritten,proto3" json:"bytes_written,omitempty"`
	Success         bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	Message         string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	StorageProvider string                 `protobuf:"bytes,5,opt,name=storage_provider,json=storageProvider,proto3" json:"storage_provider,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *FileUploadStatus) Reset() {
	*x = FileUploadStatus{}
	mi := &file_proto_greeter_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileUploadStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadStatus) ProtoMessage() {}

func (x *FileUploadStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadStatus.ProtoReflect.Descriptor instead.
func (*FileUploadStatus) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{6}
}

func (x *FileUploadStatus) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileUploadStatus) GetBytesWritten() int64 {
	if x != nil {
		return x.BytesWritten
	}
	return 0
}

func (x *FileUploadStatus) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *FileUploadStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *FileUploadStatus) GetStorageProvider() string {
	if x != nil {
		return x.StorageProvider
	}
	return ""
}

// Message for file download request.
type FileDownloadRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Filename        string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	StorageProvider string                 `protobuf:"bytes,2,opt,name=storage_provider,json=storageProvider,proto3" json:"storage_provider,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *FileDownloadRequest) Reset() {
	*x = FileDownloadRequest{}
	mi := &file_proto_greeter_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileDownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDownloadRequest) ProtoMessage() {}

func (x *FileDownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDownloadRequest.ProtoReflect.Descriptor instead.
func (*FileDownloadRequest) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{7}
}

func (x *FileDownloadRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileDownloadRequest) GetStorageProvider() string {
	if x != nil {
		return x.StorageProvider
	}
	return ""
}

var File_proto_greeter_proto protoreflect.FileDescriptor

const file_proto_greeter_proto_rawDesc = "" +
	"\n" +
	"\x13proto/greeter.proto\x12\x05proto\"\"\n" +
	"\fHelloRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"&\n" +
	"\n" +
	"HelloReply\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"&\n" +
	"\x0eCounterRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\"$\n" +
	"\fCounterReply\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\";\n" +
	"\vChatMessage\x12\x12\n" +
	"\x04user\x18\x01 \x01(\tR\x04user\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"]\n" +
	"\tFileChunk\x12\x18\n" +
	"\acontent\x18\x01 \x01(\fR\acontent\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x1a\n" +
	"\bfilesize\x18\x03 \x01(\x03R\bfilesize\"\xb2\x01\n" +
	"\x10FileUploadStatus\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12#\n" +
	"\rbytes_written\x18\x02 \x01(\x03R\fbytesWritten\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12)\n" +
	"\x10storage_provider\x18\x05 \x01(\tR\x0fstorageProvider\"\\\n" +
	"\x13FileDownloadRequest\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12)\n" +
	"\x10storage_provider\x18\x02 \x01(\tR\x0fstorageProvider2\xb5\x02\n" +
	"\aGreeter\x124\n" +
	"\bSayHello\x12\x13.proto.HelloRequest\x1a\x11.proto.HelloReply\"\x00\x12?\n" +
	"\rStreamCounter\x12\x15.proto.CounterRequest\x1a\x13.proto.CounterReply\"\x000\x01\x124\n" +
	"\x04Chat\x12\x12.proto.ChatMessage\x1a\x12.proto.ChatMessage\"\x00(\x010\x01\x12;\n" +
	"\n" +
	"UploadFile\x12\x10.proto.FileChunk\x1a\x17.proto.FileUploadStatus\"\x00(\x01\x12@\n" +
	"\fDownloadFile\x12\x1a.proto.FileDownloadRequest\x1a\x10.proto.FileChunk\"\x000\x01B\x1bZ\x19grpc-sample-minimal/protob\x06proto3"

var (
	file_proto_greeter_proto_rawDescOnce sync.Once
	file_proto_greeter_proto_rawDescData []byte
)

func file_proto_greeter_proto_rawDescGZIP() []byte {
	file_proto_greeter_proto_rawDescOnce.Do(func() {
		file_proto_greeter_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_greeter_proto_rawDesc), len(file_proto_greeter_proto_rawDesc)))
	})
	return file_proto_greeter_proto_rawDescData
}

var file_proto_greeter_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_greeter_proto_goTypes = []any{
	(*HelloRequest)(nil),        // 0: proto.HelloRequest
	(*HelloReply)(nil),          // 1: proto.HelloReply
	(*CounterRequest)(nil),      // 2: proto.CounterRequest
	(*CounterReply)(nil),        // 3: proto.CounterReply
	(*ChatMessage)(nil),         // 4: proto.ChatMessage
	(*FileChunk)(nil),           // 5: proto.FileChunk
	(*FileUploadStatus)(nil),    // 6: proto.FileUploadStatus
	(*FileDownloadRequest)(nil), // 7: proto.FileDownloadRequest
}
var file_proto_greeter_proto_depIdxs = []int32{
	0, // 0: proto.Greeter.SayHello:input_type -> proto.HelloRequest
	2, // 1: proto.Greeter.StreamCounter:input_type -> proto.CounterRequest
	4, // 2: proto.Greeter.Chat:input_type -> proto.ChatMessage
	5, // 3: proto.Greeter.UploadFile:input_type -> proto.FileChunk
	7, // 4: proto.Greeter.DownloadFile:input_type -> proto.FileDownloadRequest
	1, // 5: proto.Greeter.SayHello:output_type -> proto.HelloReply
	3, // 6: proto.Greeter.StreamCounter:output_type -> proto.CounterReply
	4, // 7: proto.Greeter.Chat:output_type -> proto.ChatMessage
	6, // 8: proto.Greeter.UploadFile:output_type -> proto.FileUploadStatus
	5, // 9: proto.Greeter.DownloadFile:output_type -> proto.FileChunk
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_greeter_proto_init() }
func file_proto_greeter_proto_init() {
	if File_proto_greeter_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_greeter_proto_rawDesc), len(file_proto_greeter_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_greeter_proto_goTypes,
		DependencyIndexes: file_proto_greeter_proto_depIdxs,
		MessageInfos:      file_proto_greeter_proto_msgTypes,
	}.Build()
	File_proto_greeter_proto = out.File
	file_proto_greeter_proto_goTypes = nil
	file_proto_greeter_proto_depIdxs = nil
}
