// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.29.4
// source: proto/greeter.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request message containing the user's name.
type HelloRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HelloRequest) Reset() {
	*x = HelloRequest{}
	mi := &file_proto_greeter_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelloRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloRequest) ProtoMessage() {}

func (x *HelloRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloRequest.ProtoReflect.Descriptor instead.
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{0}
}

func (x *HelloRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// The response message containing the greetings
type HelloReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HelloReply) Reset() {
	*x = HelloReply{}
	mi := &file_proto_greeter_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelloReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloReply) ProtoMessage() {}

func (x *HelloReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloReply.ProtoReflect.Descriptor instead.
func (*HelloReply) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{1}
}

func (x *HelloReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// The request message for the counter stream.
type CounterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CounterRequest) Reset() {
	*x = CounterRequest{}
	mi := &file_proto_greeter_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CounterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CounterRequest) ProtoMessage() {}

func (x *CounterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CounterRequest.ProtoReflect.Descriptor instead.
func (*CounterRequest) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{2}
}

func (x *CounterRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// The response message for the counter stream.
type CounterReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CounterReply) Reset() {
	*x = CounterReply{}
	mi := &file_proto_greeter_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CounterReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CounterReply) ProtoMessage() {}

func (x *CounterReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CounterReply.ProtoReflect.Descriptor instead.
func (*CounterReply) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{3}
}

func (x *CounterReply) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// The message type for chat communication.
type ChatMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          string                 `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	mi := &file_proto_greeter_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{4}
}

func (x *ChatMessage) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ChatMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Message for file chunks during upload/download.
type FileChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       []byte                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Filesize      int64                  `protobuf:"varint,3,opt,name=filesize,proto3" json:"filesize,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileChunk) Reset() {
	*x = FileChunk{}
	mi := &file_proto_greeter_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChunk) ProtoMessage() {}

func (x *FileChunk) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChunk.ProtoReflect.Descriptor instead.
func (*FileChunk) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{5}
}

func (x *FileChunk) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *FileChunk) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileChunk) GetFilesize() int64 {
	if x != nil {
		return x.Filesize
	}
	return 0
}

// Message for file upload status.
type FileUploadStatus struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Filename        string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	BytesWritten    int64                  `protobuf:"varint,2,opt,name=bytes_written,json=bytesWritten,proto3" json:"bytes_written,omitempty"`
	Success         bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	Message         string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	StorageProvider string                 `protobuf:"bytes,5,opt,name=storage_provider,json=storageProvider,proto3" json:"storage_provider,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *FileUploadStatus) Reset() {
	*x = FileUploadStatus{}
	mi := &file_proto_greeter_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileUploadStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadStatus) ProtoMessage() {}

func (x *FileUploadStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadStatus.ProtoReflect.Descriptor instead.
func (*FileUploadStatus) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{6}
}

func (x *FileUploadStatus) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileUploadStatus) GetBytesWritten() int64 {
	if x != nil {
		return x.BytesWritten
	}
	return 0
}

func (x *FileUploadStatus) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *FileUploadStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *FileUploadStatus) GetStorageProvider() string {
	if x != nil {
		return x.StorageProvider
	}
	return ""
}

// Message for file download request.
type FileDownloadRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Filename        string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	StorageProvider string                 `protobuf:"bytes,2,opt,name=storage_provider,json=storageProvider,proto3" json:"storage_provider,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *FileDownloadRequest) Reset() {
	*x = FileDownloadRequest{}
	mi := &file_proto_greeter_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileDownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDownloadRequest) ProtoMessage() {}

func (x *FileDownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDownloadRequest.ProtoReflect.Descriptor instead.
func (*FileDownloadRequest) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{7}
}

func (x *FileDownloadRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileDownloadRequest) GetStorageProvider() string {
	if x != nil {
		return x.StorageProvider
	}
	return ""
}

// Message for file list request.
type FileListRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	StorageProvider string                 `protobuf:"bytes,1,opt,name=storage_provider,json=storageProvider,proto3" json:"storage_provider,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *FileListRequest) Reset() {
	*x = FileListRequest{}
	mi := &file_proto_greeter_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileListRequest) ProtoMessage() {}

func (x *FileListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileListRequest.ProtoReflect.Descriptor instead.
func (*FileListRequest) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{8}
}

func (x *FileListRequest) GetStorageProvider() string {
	if x != nil {
		return x.StorageProvider
	}
	return ""
}

// Message for file list response.
type FileListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []*FileInfo            `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileListResponse) Reset() {
	*x = FileListResponse{}
	mi := &file_proto_greeter_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileListResponse) ProtoMessage() {}

func (x *FileListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileListResponse.ProtoReflect.Descriptor instead.
func (*FileListResponse) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{9}
}

func (x *FileListResponse) GetFiles() []*FileInfo {
	if x != nil {
		return x.Files
	}
	return nil
}

// File information.
type FileInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	mi := &file_proto_greeter_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{10}
}

func (x *FileInfo) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileInfo) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *FileInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

// Message for file delete request.
type DeleteFileRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Filename        string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	StorageProvider string                 `protobuf:"bytes,2,opt,name=storage_provider,json=storageProvider,proto3" json:"storage_provider,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DeleteFileRequest) Reset() {
	*x = DeleteFileRequest{}
	mi := &file_proto_greeter_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileRequest) ProtoMessage() {}

func (x *DeleteFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileRequest.ProtoReflect.Descriptor instead.
func (*DeleteFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteFileRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *DeleteFileRequest) GetStorageProvider() string {
	if x != nil {
		return x.StorageProvider
	}
	return ""
}

// Message for file delete response.
type DeleteFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileResponse) Reset() {
	*x = DeleteFileResponse{}
	mi := &file_proto_greeter_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileResponse) ProtoMessage() {}

func (x *DeleteFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileResponse.ProtoReflect.Descriptor instead.
func (*DeleteFileResponse) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteFileResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteFileResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// OCR Request
type OCRRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Filename        string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	StorageProvider string                 `protobuf:"bytes,2,opt,name=storage_provider,json=storageProvider,proto3" json:"storage_provider,omitempty"` // "azure", "s3", "gcs"????"azure"????????????
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *OCRRequest) Reset() {
	*x = OCRRequest{}
	mi := &file_proto_greeter_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OCRRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCRRequest) ProtoMessage() {}

func (x *OCRRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCRRequest.ProtoReflect.Descriptor instead.
func (*OCRRequest) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{13}
}

func (x *OCRRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *OCRRequest) GetStorageProvider() string {
	if x != nil {
		return x.StorageProvider
	}
	return ""
}

// OCR Response
type OCRResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"` // ??????ID
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OCRResponse) Reset() {
	*x = OCRResponse{}
	mi := &file_proto_greeter_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OCRResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCRResponse) ProtoMessage() {}

func (x *OCRResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCRResponse.ProtoReflect.Descriptor instead.
func (*OCRResponse) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{14}
}

func (x *OCRResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *OCRResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *OCRResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// OCR Result Request
type OCRResultRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Filename        string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	StorageProvider string                 `protobuf:"bytes,2,opt,name=storage_provider,json=storageProvider,proto3" json:"storage_provider,omitempty"`
	EngineName      string                 `protobuf:"bytes,3,opt,name=engine_name,json=engineName,proto3" json:"engine_name,omitempty"` // "tesseract", "easyocr", "paddleocr"?Phase 2B???
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *OCRResultRequest) Reset() {
	*x = OCRResultRequest{}
	mi := &file_proto_greeter_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OCRResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCRResultRequest) ProtoMessage() {}

func (x *OCRResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCRResultRequest.ProtoReflect.Descriptor instead.
func (*OCRResultRequest) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{15}
}

func (x *OCRResultRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *OCRResultRequest) GetStorageProvider() string {
	if x != nil {
		return x.StorageProvider
	}
	return ""
}

func (x *OCRResultRequest) GetEngineName() string {
	if x != nil {
		return x.EngineName
	}
	return ""
}

// OCR Result Response
type OCRResultResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	EngineName    string                 `protobuf:"bytes,2,opt,name=engine_name,json=engineName,proto3" json:"engine_name,omitempty"` // "tesseract", "easyocr", "paddleocr"
	ExtractedText string                 `protobuf:"bytes,3,opt,name=extracted_text,json=extractedText,proto3" json:"extracted_text,omitempty"`
	Pages         []*OCRPage             `protobuf:"bytes,4,rep,name=pages,proto3" json:"pages,omitempty"`   // PDF??????????
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"` // "processing", "completed", "failed"
	ErrorMessage  string                 `protobuf:"bytes,6,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Confidence    float64                `protobuf:"fixed64,7,opt,name=confidence,proto3" json:"confidence,omitempty"` // ?????
	ProcessedAt   int64                  `protobuf:"varint,8,opt,name=processed_at,json=processedAt,proto3" json:"processed_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OCRResultResponse) Reset() {
	*x = OCRResultResponse{}
	mi := &file_proto_greeter_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OCRResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCRResultResponse) ProtoMessage() {}

func (x *OCRResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCRResultResponse.ProtoReflect.Descriptor instead.
func (*OCRResultResponse) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{16}
}

func (x *OCRResultResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *OCRResultResponse) GetEngineName() string {
	if x != nil {
		return x.EngineName
	}
	return ""
}

func (x *OCRResultResponse) GetExtractedText() string {
	if x != nil {
		return x.ExtractedText
	}
	return ""
}

func (x *OCRResultResponse) GetPages() []*OCRPage {
	if x != nil {
		return x.Pages
	}
	return nil
}

func (x *OCRResultResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OCRResultResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *OCRResultResponse) GetConfidence() float64 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *OCRResultResponse) GetProcessedAt() int64 {
	if x != nil {
		return x.ProcessedAt
	}
	return 0
}

// OCR Page (for multi-page documents)
type OCRPage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageNumber    int32                  `protobuf:"varint,1,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Confidence    float64                `protobuf:"fixed64,3,opt,name=confidence,proto3" json:"confidence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OCRPage) Reset() {
	*x = OCRPage{}
	mi := &file_proto_greeter_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OCRPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCRPage) ProtoMessage() {}

func (x *OCRPage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCRPage.ProtoReflect.Descriptor instead.
func (*OCRPage) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{17}
}

func (x *OCRPage) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *OCRPage) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *OCRPage) GetConfidence() float64 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

// OCR List Request
type OCRListRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	StorageProvider string                 `protobuf:"bytes,1,opt,name=storage_provider,json=storageProvider,proto3" json:"storage_provider,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *OCRListRequest) Reset() {
	*x = OCRListRequest{}
	mi := &file_proto_greeter_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OCRListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCRListRequest) ProtoMessage() {}

func (x *OCRListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCRListRequest.ProtoReflect.Descriptor instead.
func (*OCRListRequest) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{18}
}

func (x *OCRListRequest) GetStorageProvider() string {
	if x != nil {
		return x.StorageProvider
	}
	return ""
}

// OCR List Response
type OCRListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*OCRResultSummary    `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OCRListResponse) Reset() {
	*x = OCRListResponse{}
	mi := &file_proto_greeter_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OCRListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCRListResponse) ProtoMessage() {}

func (x *OCRListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCRListResponse.ProtoReflect.Descriptor instead.
func (*OCRListResponse) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{19}
}

func (x *OCRListResponse) GetResults() []*OCRResultSummary {
	if x != nil {
		return x.Results
	}
	return nil
}

// OCR Result Summary
type OCRResultSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	EngineName    string                 `protobuf:"bytes,2,opt,name=engine_name,json=engineName,proto3" json:"engine_name,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	ProcessedAt   int64                  `protobuf:"varint,4,opt,name=processed_at,json=processedAt,proto3" json:"processed_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OCRResultSummary) Reset() {
	*x = OCRResultSummary{}
	mi := &file_proto_greeter_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OCRResultSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCRResultSummary) ProtoMessage() {}

func (x *OCRResultSummary) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCRResultSummary.ProtoReflect.Descriptor instead.
func (*OCRResultSummary) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{20}
}

func (x *OCRResultSummary) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *OCRResultSummary) GetEngineName() string {
	if x != nil {
		return x.EngineName
	}
	return ""
}

func (x *OCRResultSummary) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OCRResultSummary) GetProcessedAt() int64 {
	if x != nil {
		return x.ProcessedAt
	}
	return 0
}

// OCR Comparison Request (Phase 2B)
type OCRComparisonRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Filename        string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	StorageProvider string                 `protobuf:"bytes,2,opt,name=storage_provider,json=storageProvider,proto3" json:"storage_provider,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *OCRComparisonRequest) Reset() {
	*x = OCRComparisonRequest{}
	mi := &file_proto_greeter_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OCRComparisonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCRComparisonRequest) ProtoMessage() {}

func (x *OCRComparisonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCRComparisonRequest.ProtoReflect.Descriptor instead.
func (*OCRComparisonRequest) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{21}
}

func (x *OCRComparisonRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *OCRComparisonRequest) GetStorageProvider() string {
	if x != nil {
		return x.StorageProvider
	}
	return ""
}

// OCR Comparison Response (Phase 2B)
type OCRComparisonResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Filename        string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	StorageProvider string                 `protobuf:"bytes,2,opt,name=storage_provider,json=storageProvider,proto3" json:"storage_provider,omitempty"`
	Results         []*OCRResultResponse   `protobuf:"bytes,3,rep,name=results,proto3" json:"results,omitempty"` // ????????????
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *OCRComparisonResponse) Reset() {
	*x = OCRComparisonResponse{}
	mi := &file_proto_greeter_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OCRComparisonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCRComparisonResponse) ProtoMessage() {}

func (x *OCRComparisonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_greeter_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCRComparisonResponse.ProtoReflect.Descriptor instead.
func (*OCRComparisonResponse) Descriptor() ([]byte, []int) {
	return file_proto_greeter_proto_rawDescGZIP(), []int{22}
}

func (x *OCRComparisonResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *OCRComparisonResponse) GetStorageProvider() string {
	if x != nil {
		return x.StorageProvider
	}
	return ""
}

func (x *OCRComparisonResponse) GetResults() []*OCRResultResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_proto_greeter_proto protoreflect.FileDescriptor

const file_proto_greeter_proto_rawDesc = "" +
	"\n" +
	"\x13proto/greeter.proto\x12\x05proto\"\"\n" +
	"\fHelloRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"&\n" +
	"\n" +
	"HelloReply\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"&\n" +
	"\x0eCounterRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\"$\n" +
	"\fCounterReply\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\";\n" +
	"\vChatMessage\x12\x12\n" +
	"\x04user\x18\x01 \x01(\tR\x04user\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"]\n" +
	"\tFileChunk\x12\x18\n" +
	"\acontent\x18\x01 \x01(\fR\acontent\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x1a\n" +
	"\bfilesize\x18\x03 \x01(\x03R\bfilesize\"\xb2\x01\n" +
	"\x10FileUploadStatus\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12#\n" +
	"\rbytes_written\x18\x02 \x01(\x03R\fbytesWritten\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12)\n" +
	"\x10storage_provider\x18\x05 \x01(\tR\x0fstorageProvider\"\\\n" +
	"\x13FileDownloadRequest\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12)\n" +
	"\x10storage_provider\x18\x02 \x01(\tR\x0fstorageProvider\"<\n" +
	"\x0fFileListRequest\x12)\n" +
	"\x10storage_provider\x18\x01 \x01(\tR\x0fstorageProvider\"9\n" +
	"\x10FileListResponse\x12%\n" +
	"\x05files\x18\x01 \x03(\v2\x0f.proto.FileInfoR\x05files\"X\n" +
	"\bFileInfo\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\"Z\n" +
	"\x11DeleteFileRequest\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12)\n" +
	"\x10storage_provider\x18\x02 \x01(\tR\x0fstorageProvider\"H\n" +
	"\x12DeleteFileResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"S\n" +
	"\n" +
	"OCRRequest\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12)\n" +
	"\x10storage_provider\x18\x02 \x01(\tR\x0fstorageProvider\"Z\n" +
	"\vOCRResponse\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"z\n" +
	"\x10OCRResultRequest\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12)\n" +
	"\x10storage_provider\x18\x02 \x01(\tR\x0fstorageProvider\x12\x1f\n" +
	"\vengine_name\x18\x03 \x01(\tR\n" +
	"engineName\"\x9d\x02\n" +
	"\x11OCRResultResponse\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x1f\n" +
	"\vengine_name\x18\x02 \x01(\tR\n" +
	"engineName\x12%\n" +
	"\x0eextracted_text\x18\x03 \x01(\tR\rextractedText\x12$\n" +
	"\x05pages\x18\x04 \x03(\v2\x0e.proto.OCRPageR\x05pages\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x12#\n" +
	"\rerror_message\x18\x06 \x01(\tR\ferrorMessage\x12\x1e\n" +
	"\n" +
	"confidence\x18\a \x01(\x01R\n" +
	"confidence\x12!\n" +
	"\fprocessed_at\x18\b \x01(\x03R\vprocessedAt\"^\n" +
	"\aOCRPage\x12\x1f\n" +
	"\vpage_number\x18\x01 \x01(\x05R\n" +
	"pageNumber\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x12\x1e\n" +
	"\n" +
	"confidence\x18\x03 \x01(\x01R\n" +
	"confidence\";\n" +
	"\x0eOCRListRequest\x12)\n" +
	"\x10storage_provider\x18\x01 \x01(\tR\x0fstorageProvider\"D\n" +
	"\x0fOCRListResponse\x121\n" +
	"\aresults\x18\x01 \x03(\v2\x17.proto.OCRResultSummaryR\aresults\"\x8a\x01\n" +
	"\x10OCRResultSummary\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x1f\n" +
	"\vengine_name\x18\x02 \x01(\tR\n" +
	"engineName\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12!\n" +
	"\fprocessed_at\x18\x04 \x01(\x03R\vprocessedAt\"]\n" +
	"\x14OCRComparisonRequest\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12)\n" +
	"\x10storage_provider\x18\x02 \x01(\tR\x0fstorageProvider\"\x92\x01\n" +
	"\x15OCRComparisonResponse\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12)\n" +
	"\x10storage_provider\x18\x02 \x01(\tR\x0fstorageProvider\x122\n" +
	"\aresults\x18\x03 \x03(\v2\x18.proto.OCRResultResponseR\aresults2\xcb\x05\n" +
	"\aGreeter\x124\n" +
	"\bSayHello\x12\x13.proto.HelloRequest\x1a\x11.proto.HelloReply\"\x00\x12?\n" +
	"\rStreamCounter\x12\x15.proto.CounterRequest\x1a\x13.proto.CounterReply\"\x000\x01\x124\n" +
	"\x04Chat\x12\x12.proto.ChatMessage\x1a\x12.proto.ChatMessage\"\x00(\x010\x01\x12;\n" +
	"\n" +
	"UploadFile\x12\x10.proto.FileChunk\x1a\x17.proto.FileUploadStatus\"\x00(\x01\x12@\n" +
	"\fDownloadFile\x12\x1a.proto.FileDownloadRequest\x1a\x10.proto.FileChunk\"\x000\x01\x12>\n" +
	"\tListFiles\x12\x16.proto.FileListRequest\x1a\x17.proto.FileListResponse\"\x00\x12C\n" +
	"\n" +
	"DeleteFile\x12\x18.proto.DeleteFileRequest\x1a\x19.proto.DeleteFileResponse\"\x00\x125\n" +
	"\n" +
	"ProcessOCR\x12\x11.proto.OCRRequest\x1a\x12.proto.OCRResponse\"\x00\x12C\n" +
	"\fGetOCRResult\x12\x17.proto.OCRResultRequest\x1a\x18.proto.OCRResultResponse\"\x00\x12A\n" +
	"\x0eListOCRResults\x12\x15.proto.OCRListRequest\x1a\x16.proto.OCRListResponse\"\x00\x12P\n" +
	"\x11CompareOCRResults\x12\x1b.proto.OCRComparisonRequest\x1a\x1c.proto.OCRComparisonResponse\"\x00B\x1bZ\x19grpc-sample-minimal/protob\x06proto3"

var (
	file_proto_greeter_proto_rawDescOnce sync.Once
	file_proto_greeter_proto_rawDescData []byte
)

func file_proto_greeter_proto_rawDescGZIP() []byte {
	file_proto_greeter_proto_rawDescOnce.Do(func() {
		file_proto_greeter_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_greeter_proto_rawDesc), len(file_proto_greeter_proto_rawDesc)))
	})
	return file_proto_greeter_proto_rawDescData
}

var file_proto_greeter_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_proto_greeter_proto_goTypes = []any{
	(*HelloRequest)(nil),          // 0: proto.HelloRequest
	(*HelloReply)(nil),            // 1: proto.HelloReply
	(*CounterRequest)(nil),        // 2: proto.CounterRequest
	(*CounterReply)(nil),          // 3: proto.CounterReply
	(*ChatMessage)(nil),           // 4: proto.ChatMessage
	(*FileChunk)(nil),             // 5: proto.FileChunk
	(*FileUploadStatus)(nil),      // 6: proto.FileUploadStatus
	(*FileDownloadRequest)(nil),   // 7: proto.FileDownloadRequest
	(*FileListRequest)(nil),       // 8: proto.FileListRequest
	(*FileListResponse)(nil),      // 9: proto.FileListResponse
	(*FileInfo)(nil),              // 10: proto.FileInfo
	(*DeleteFileRequest)(nil),     // 11: proto.DeleteFileRequest
	(*DeleteFileResponse)(nil),    // 12: proto.DeleteFileResponse
	(*OCRRequest)(nil),            // 13: proto.OCRRequest
	(*OCRResponse)(nil),           // 14: proto.OCRResponse
	(*OCRResultRequest)(nil),      // 15: proto.OCRResultRequest
	(*OCRResultResponse)(nil),     // 16: proto.OCRResultResponse
	(*OCRPage)(nil),               // 17: proto.OCRPage
	(*OCRListRequest)(nil),        // 18: proto.OCRListRequest
	(*OCRListResponse)(nil),       // 19: proto.OCRListResponse
	(*OCRResultSummary)(nil),      // 20: proto.OCRResultSummary
	(*OCRComparisonRequest)(nil),  // 21: proto.OCRComparisonRequest
	(*OCRComparisonResponse)(nil), // 22: proto.OCRComparisonResponse
}
var file_proto_greeter_proto_depIdxs = []int32{
	10, // 0: proto.FileListResponse.files:type_name -> proto.FileInfo
	17, // 1: proto.OCRResultResponse.pages:type_name -> proto.OCRPage
	20, // 2: proto.OCRListResponse.results:type_name -> proto.OCRResultSummary
	16, // 3: proto.OCRComparisonResponse.results:type_name -> proto.OCRResultResponse
	0,  // 4: proto.Greeter.SayHello:input_type -> proto.HelloRequest
	2,  // 5: proto.Greeter.StreamCounter:input_type -> proto.CounterRequest
	4,  // 6: proto.Greeter.Chat:input_type -> proto.ChatMessage
	5,  // 7: proto.Greeter.UploadFile:input_type -> proto.FileChunk
	7,  // 8: proto.Greeter.DownloadFile:input_type -> proto.FileDownloadRequest
	8,  // 9: proto.Greeter.ListFiles:input_type -> proto.FileListRequest
	11, // 10: proto.Greeter.DeleteFile:input_type -> proto.DeleteFileRequest
	13, // 11: proto.Greeter.ProcessOCR:input_type -> proto.OCRRequest
	15, // 12: proto.Greeter.GetOCRResult:input_type -> proto.OCRResultRequest
	18, // 13: proto.Greeter.ListOCRResults:input_type -> proto.OCRListRequest
	21, // 14: proto.Greeter.CompareOCRResults:input_type -> proto.OCRComparisonRequest
	1,  // 15: proto.Greeter.SayHello:output_type -> proto.HelloReply
	3,  // 16: proto.Greeter.StreamCounter:output_type -> proto.CounterReply
	4,  // 17: proto.Greeter.Chat:output_type -> proto.ChatMessage
	6,  // 18: proto.Greeter.UploadFile:output_type -> proto.FileUploadStatus
	5,  // 19: proto.Greeter.DownloadFile:output_type -> proto.FileChunk
	9,  // 20: proto.Greeter.ListFiles:output_type -> proto.FileListResponse
	12, // 21: proto.Greeter.DeleteFile:output_type -> proto.DeleteFileResponse
	14, // 22: proto.Greeter.ProcessOCR:output_type -> proto.OCRResponse
	16, // 23: proto.Greeter.GetOCRResult:output_type -> proto.OCRResultResponse
	19, // 24: proto.Greeter.ListOCRResults:output_type -> proto.OCRListResponse
	22, // 25: proto.Greeter.CompareOCRResults:output_type -> proto.OCRComparisonResponse
	15, // [15:26] is the sub-list for method output_type
	4,  // [4:15] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_proto_greeter_proto_init() }
func file_proto_greeter_proto_init() {
	if File_proto_greeter_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_greeter_proto_rawDesc), len(file_proto_greeter_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_greeter_proto_goTypes,
		DependencyIndexes: file_proto_greeter_proto_depIdxs,
		MessageInfos:      file_proto_greeter_proto_msgTypes,
	}.Build()
	File_proto_greeter_proto = out.File
	file_proto_greeter_proto_goTypes = nil
	file_proto_greeter_proto_depIdxs = nil
}
