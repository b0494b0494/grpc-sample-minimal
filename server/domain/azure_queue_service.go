package domain

import (
	"context"
	"log"
)

// azureQueueService ?Azure Queue Storage????????????
// ?: Azure Queue Storage?????????????
// ???????????in-memory???????
type azureQueueService struct {
	fallback QueueService
}

// NewAzuriteQueueService ?Azurite Queue Storage???????????????
// ?: ???????????????
// Azure Queue Storage SDK????API???????????????
func NewAzuriteQueueService() QueueService {
	return &azureQueueService{
		fallback: NewCommonQueueService(),
	}
}

func (q *azureQueueService) EnqueueOCRTask(ctx context.Context, filename string, storageProvider string) error {
	// Azure Queue Storage????????
	// ?????????????
	log.Printf("Azure Queue Storage: Using fallback for enqueue: file=%s", filename)
	return q.fallback.EnqueueOCRTask(ctx, filename, storageProvider)
}

func (q *azureQueueService) DequeueOCRTask(ctx context.Context) (*OCRTask, error) {
	// Azure Queue Storage????????
	// ?????????????
	log.Printf("Azure Queue Storage: Using fallback for dequeue")
	return q.fallback.DequeueOCRTask(ctx)
}
