package domain

import (
	"context"
	"io"
)

// DocumentConverter ?????/???????PDF????????????????
// OCR???????????????????(.txt, .md)???(.jpg, .png)?PDF?????OCR???????
type DocumentConverter interface {
	// ConvertToPDF ?????/???????PDF?????
	// ????.txt, .md????????????.jpg, .png??????????PDF???
	// ???OCR????PDF?????????OCR???????
	ConvertToPDF(ctx context.Context, filename string, content io.Reader) (io.Reader, error)
	
	// ShouldConvert ???????????PDF???????????????
	// ??????????
	ShouldConvert(filename string) bool
}

// pdfConverter ?DocumentConverter?????????????
// Phase 1?????
type pdfConverter struct {
	enabled bool // ??????????/??
}

// NewDocumentConverter ????DocumentConverter??????????/???PDF????OCR?PDF??????
func NewDocumentConverter(enabled bool) DocumentConverter {
	return &pdfConverter{
		enabled: enabled,
	}
}

// ShouldConvert ???????????????????
func (c *pdfConverter) ShouldConvert(filename string) bool {
	if !c.enabled {
		return false
	}
	// TODO: ?????????????.txt, .md, .jpg, .png???
	// ????
	return false
}

// ConvertToPDF ??????PDF??????????
func (c *pdfConverter) ConvertToPDF(ctx context.Context, filename string, content io.Reader) (io.Reader, error) {
	// TODO: ????
	// ?????gofpdf?????????PDF??
	// ?????OCR???
	// ????
	return nil, nil
}
